import asyncpg.connection
from aiogram import Router, F
from aiogram.filters import Command, Text, StateFilter
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from FSM import FSM
from aiogram.fsm.state import default_state
from services.services import get_list_of_dishes, get_recipe, add_dish_to_favorites, get_favorite_recipe, delete_recipe
from keyboards.keyboards import create_kb


router = Router()


@router.callback_query(Text(text=['–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤',
                            '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –¥—Ä—É–≥–∏—Ö –±–ª—é–¥ üç≤']), ~StateFilter(default_state))
async def select_dishes(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    await state.set_state(FSM.find_dishes)
    await callback.message.edit_text('–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–≥–æ –±–ª—é–¥–∞ –∏ —è –Ω–∞–π–¥—É '
                         '–¥–ª—è —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è –µ–≥–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è!')



@router.callback_query(Text(text='–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç üìÉ'), ~StateFilter(default_state))
async def back_dishes(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    await callback.message.edit_text('–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏!',
                                     reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤', **data['titles']))


@router.message(StateFilter(FSM.find_dishes))
async def list_of_dishes(message: Message, state: FSMContext):
    data = await get_list_of_dishes(message.text)
    if data:
        await state.update_data(data)
        await message.answer('–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏!',
                             reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤', **data['titles']))
        await state.set_state(FSM.get_recipe)
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑...')
        await state.set_state(FSM.find_dishes)


@router.callback_query(StateFilter(FSM.get_recipe), Text(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§'))
async def add_to_favorites(callback: CallbackQuery, state: FSMContext, conn: asyncpg.connection.Connection):
    await callback.answer()
    data = await state.get_data()
    result = await add_dish_to_favorites(callback.from_user.id, data['current_dish'],  data['recipe'], conn)
    if result:
        await callback.message.answer('–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!',
                                      reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç üìÉ',
                                                             '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤'))
    else:
        await callback.message.answer('–î–∞–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –≤–∞—à–∏—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤!',
                                      reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç üìÉ',
                                                             '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤'))


@router.callback_query(StateFilter(FSM.get_recipe))
async def recipe(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    recipe = await get_recipe(data['dishes'].get(callback.data))
    data['recipe'] = recipe
    data['current_dish'] = data['titles'][callback.data]
    await state.update_data(data)
    if recipe:
        await callback.message.edit_text(f'{recipe}', reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç üìÉ',
                                                                             '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§'))
    else:
        await callback.message.edit_text('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç',
                             reply_markup=create_kb(1, '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –±–ª—é–¥–æ üç≤', **data['titles']))


@router.callback_query(StateFilter(FSM.favorites), Text(text='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ‚ù§'))
async def all_favorites(callback: CallbackQuery, state: FSMContext, conn: asyncpg.connection.Connection):
    await callback.answer()
    data = await state.get_data()
    favorites_dishes = data['favorites_dishes']
    await callback.message.answer(f'–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ‚ù§',
                         reply_markup=create_kb(1, '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –¥—Ä—É–≥–∏—Ö –±–ª—é–¥ üç≤', **favorites_dishes))


@router.callback_query(StateFilter(FSM.favorites), Text(text='–£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö üóë'))
async def delete_recipe_handler(callback: CallbackQuery, state: FSMContext, conn: asyncpg.connection.Connection):
    data = await state.get_data()
    data = await delete_recipe(callback.from_user.id, data, conn)
    await state.update_data(data)
    await callback.message.edit_text('–†–µ—Ü–µ–ø—Ç —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö!',
                                     reply_markup=create_kb(1,
                                                            '–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ‚ù§',
                                                            '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –¥—Ä—É–≥–∏—Ö –±–ª—é–¥ üç≤'))


@router.callback_query(StateFilter(FSM.favorites))
async def favorite_recipe(callback: CallbackQuery, state: FSMContext, conn: asyncpg.connection.Connection):
    await callback.answer()
    data = await state.get_data()
    data['favorite_dish_id'] = callback.data
    await state.update_data(data)
    recipe = await get_favorite_recipe(callback.data, conn)
    await callback.message.edit_text(recipe,
                                     reply_markup=create_kb(1,
                                                            '–£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö üóë',
                                                            '–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ‚ù§'))








