import asyncpg.connection
from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.types import Message
from aiogram.fsm.state import default_state
from aiogram.filters.state import State
from aiogram.fsm.context import FSMContext
from FSM import FSM

from keyboards.keyboards import create_kb
from services.services import add_user_in_db, get_favorites_dishes

router = Router()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@router.message(Command(commands=["start"]), StateFilter(default_state))
@router.message(Command(commands=["start"]), ~StateFilter(default_state))
async def process_start_command(message: Message, state: FSMContext, conn: asyncpg.connection.Connection):
    await add_user_in_db(message.from_user.id, message.from_user.username, conn)
    await state.set_state(FSM.find_dishes)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n\n–≠—Ç–æ –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç!\n'
                         f'–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–≥–æ –±–ª—é–¥–∞ –∏ —è –Ω–∞–π–¥—É '
                         '–¥–ª—è —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è –µ–≥–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è!')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/favorites"
@router.message(Command(commands=['favorites']), StateFilter(default_state))
@router.message(Command(commands=['favorites']), ~StateFilter(default_state))
async def process_favorite_command(message: Message, state: FSMContext, conn: asyncpg.connection.Connection):
    data = await state.get_data()
    favorites_dishes: dict = await get_favorites_dishes(message.from_user.id, conn)
    data['favorites_dishes'] = favorites_dishes
    await state.update_data(data)
    await state.set_state(FSM.favorites)
    await message.answer(f'–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ‚ù§',
                         reply_markup=create_kb(1, '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –¥—Ä—É–≥–∏—Ö –±–ª—é–¥ üç≤', **favorites_dishes))


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
@router.message(Command(commands=['help']), StateFilter(default_state))
@router.message(Command(commands=['help']), ~StateFilter(default_state))
async def process_help_command(message: Message):
    await message.answer('–ù–∞–ø–∏—à–∏ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–≥–æ –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–≥–æ –±–ª—é–¥–∞ –∏ –æ–Ω –Ω–∞–π–¥–µ—Ç –¥–ª—è —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤!')



